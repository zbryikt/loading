{"version":3,"sources":["/gif.coffee","/browser.coffee","events"],"names":["browser","defaults","EventEmitter","frameDefaults","GIF","require","options","key","value","image","frame","ImageData","CanvasRenderingContext2D","WebGLRenderingContext","Error","i","numWorkers","worker","console","Math","Worker","event","len","data","Uint8Array","offset","page","Blob","task","ctx","document","index","module","mode","platform","ua","UA","navigator","parseFloat","parseInt","process","exports","isArray","Array","xs","Object","prototype","toString","call","defaultMaxListeners","setMaxListeners","n","_events","maxListeners","emit","type","error","length","arguments","handler","args","slice","apply","listeners","l","addListener","listener","warned","m","undefined","trace","push","on","once","self","g","removeListener","list","indexOf","splice","removeAllListeners"],"mappings":"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","sourceRoot":"../src","sourcesContent":["{EventEmitter} = require 'events'\nbrowser = require './browser.coffee'\n\nclass GIF extends EventEmitter\n\n  defaults =\n    workerScript: 'gif.worker.js'\n    workers: 2\n    repeat: 0 # repeat forever, -1 = repeat once\n    background: '#fff'\n    quality: 10 # pixel sample interval, lower is better\n    width: null # size derermined from first frame if possible\n    height: null\n    transparent: null\n\n  frameDefaults =\n    delay: 500 # ms\n    copy: false\n\n  constructor: (options) ->\n    @running = false\n\n    @options = {}\n    @frames = []\n\n    @freeWorkers = []\n    @activeWorkers = []\n\n    @setOptions options\n    for key, value of defaults\n      @options[key] ?= value\n\n  setOption: (key, value) ->\n    @options[key] = value\n    if @_canvas? and key in ['width', 'height']\n      @_canvas[key] = value\n\n  setOptions: (options) ->\n    @setOption key, value for own key, value of options\n\n  addFrame: (image, options={}) ->\n    frame = {}\n    frame.transparent = @options.transparent\n    for key of frameDefaults\n      frame[key] = options[key] or frameDefaults[key]\n\n    # use the images width and height for options unless already set\n    @setOption 'width', image.width unless @options.width?\n    @setOption 'height', image.height unless @options.height?\n\n    if ImageData? and image instanceof ImageData\n       frame.data = image.data\n    else if (CanvasRenderingContext2D? and image instanceof CanvasRenderingContext2D) or (WebGLRenderingContext? and image instanceof WebGLRenderingContext)\n      if options.copy\n        frame.data = @getContextData image\n      else\n        frame.context = image\n    else if image.childNodes?\n      if options.copy\n        frame.data = @getImageData image\n      else\n        frame.image = image\n    else\n      throw new Error 'Invalid image'\n\n    @frames.push frame\n\n  render: ->\n    throw new Error 'Already running' if @running\n\n    if not @options.width? or not @options.height?\n      throw new Error 'Width and height must be set prior to rendering'\n\n    @running = true\n    @nextFrame = 0\n    @finishedFrames = 0\n\n    @imageParts = (null for i in [0...@frames.length])\n    numWorkers = @spawnWorkers()\n    @renderNextFrame() for i in [0...numWorkers]\n\n    @emit 'start'\n    @emit 'progress', 0\n\n  abort: ->\n    loop\n      worker = @activeWorkers.shift()\n      break unless worker?\n      console.log \"killing active worker\"\n      worker.terminate()\n    @running = false\n    @emit 'abort'\n\n  # private\n\n  spawnWorkers: ->\n    numWorkers = Math.min(@options.workers, @frames.length)\n    [@freeWorkers.length...numWorkers].forEach (i) =>\n      console.log \"spawning worker #{ i }\"\n      worker = new Worker @options.workerScript\n      worker.onmessage = (event) =>\n        @activeWorkers.splice @activeWorkers.indexOf(worker), 1\n        @freeWorkers.push worker\n        @frameFinished event.data\n      @freeWorkers.push worker\n    return numWorkers\n\n  frameFinished: (frame) ->\n    console.log \"frame #{ frame.index } finished - #{ @activeWorkers.length } active\"\n    @finishedFrames++\n    @emit 'progress', @finishedFrames / @frames.length\n    @imageParts[frame.index] = frame\n    if null in @imageParts\n      @renderNextFrame()\n    else\n      @finishRendering()\n\n  finishRendering: ->\n    len = 0\n    for frame in @imageParts\n      len += (frame.data.length - 1) * frame.pageSize + frame.cursor\n    len += frame.pageSize - frame.cursor\n    console.log \"rendering finished - filesize #{ Math.round(len / 1000) }kb\"\n    data = new Uint8Array len\n    offset = 0\n    for frame in @imageParts\n      for page, i in frame.data\n        data.set page, offset\n        if i is frame.data.length - 1\n          offset += frame.cursor\n        else\n          offset += frame.pageSize\n\n    image = new Blob [data],\n      type: 'image/gif'\n\n    @emit 'finished', image, data\n\n  renderNextFrame: ->\n    throw new Error 'No free workers' if @freeWorkers.length is 0\n    return if @nextFrame >= @frames.length # no new frame to render\n\n    frame = @frames[@nextFrame++]\n    worker = @freeWorkers.shift()\n    task = @getTask frame\n\n    console.log \"starting frame #{ task.index + 1 } of #{ @frames.length }\"\n    @activeWorkers.push worker\n    worker.postMessage task#, [task.data.buffer]\n\n  getContextData: (ctx) ->\n    return ctx.getImageData(0, 0, @options.width, @options.height).data\n\n  getImageData: (image) ->\n    if not @_canvas?\n      @_canvas = document.createElement 'canvas'\n      @_canvas.width = @options.width\n      @_canvas.height = @options.height\n\n    ctx = @_canvas.getContext '2d'\n    ctx.setFill = @options.background\n    ctx.fillRect 0, 0, @options.width, @options.height\n    ctx.drawImage image, 0, 0\n\n    return @getContextData ctx\n\n  getTask: (frame) ->\n    index = @frames.indexOf frame\n    task =\n      index: index\n      last: index is (@frames.length - 1)\n      delay: frame.delay\n      transparent: frame.transparent\n      width: @options.width\n      height: @options.height\n      quality: @options.quality\n      repeat: @options.repeat\n      canTransfer: (browser.name is 'chrome')\n\n    if frame.data?\n      task.data = frame.data\n    else if frame.context?\n      task.data = @getContextData frame.context\n    else if frame.image?\n      task.data = @getImageData frame.image\n    else\n      throw new Error 'Invalid frame'\n\n    return task\n\nmodule.exports = GIF\n","### CoffeeScript version of the browser detection from MooTools ###\n\nua = navigator.userAgent.toLowerCase()\nplatform = navigator.platform.toLowerCase()\nUA = ua.match(/(opera|ie|firefox|chrome|version)[\\s\\/:]([\\w\\d\\.]+)?.*?(safari|version[\\s\\/:]([\\w\\d\\.]+)|$)/) or [null, 'unknown', 0]\nmode = UA[1] == 'ie' && document.documentMode\n\nbrowser =\n  name: if UA[1] is 'version' then UA[3] else UA[1]\n  version: mode or parseFloat(if UA[1] is 'opera' && UA[4] then UA[4] else UA[2])\n\n  platform:\n    name: if ua.match(/ip(?:ad|od|hone)/) then 'ios' else (ua.match(/(?:webos|android)/) or platform.match(/mac|win|linux/) or ['other'])[0]\n\nbrowser[browser.name] = true\nbrowser[browser.name + parseInt(browser.version, 10)] = true\nbrowser.platform[browser.platform.name] = true\n\nmodule.exports = browser\n","if (!process.EventEmitter) process.EventEmitter = function () {};\n\nvar EventEmitter = exports.EventEmitter = process.EventEmitter;\nvar isArray = typeof Array.isArray === 'function'\n    ? Array.isArray\n    : function (xs) {\n        return Object.prototype.toString.call(xs) === '[object Array]'\n    }\n;\n\n// By default EventEmitters will print a warning if more than\n// 10 listeners are added to it. This is a useful default which\n// helps finding memory leaks.\n//\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nvar defaultMaxListeners = 10;\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!this._events) this._events = {};\n  this._events.maxListeners = n;\n};\n\n\nEventEmitter.prototype.emit = function(type) {\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events || !this._events.error ||\n        (isArray(this._events.error) && !this._events.error.length))\n    {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n      return false;\n    }\n  }\n\n  if (!this._events) return false;\n  var handler = this._events[type];\n  if (!handler) return false;\n\n  if (typeof handler == 'function') {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        var args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n    return true;\n\n  } else if (isArray(handler)) {\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    var listeners = handler.slice();\n    for (var i = 0, l = listeners.length; i < l; i++) {\n      listeners[i].apply(this, args);\n    }\n    return true;\n\n  } else {\n    return false;\n  }\n};\n\n// EventEmitter is defined in src/node_events.cc\n// EventEmitter.prototype.emit() is also defined there.\nEventEmitter.prototype.addListener = function(type, listener) {\n  if ('function' !== typeof listener) {\n    throw new Error('addListener only takes instances of Function');\n  }\n\n  if (!this._events) this._events = {};\n\n  // To avoid recursion in the case that type == \"newListeners\"! Before\n  // adding it to the listeners, first emit \"newListeners\".\n  this.emit('newListener', type, listener);\n\n  if (!this._events[type]) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  } else if (isArray(this._events[type])) {\n\n    // Check for listener leak\n    if (!this._events[type].warned) {\n      var m;\n      if (this._events.maxListeners !== undefined) {\n        m = this._events.maxListeners;\n      } else {\n        m = defaultMaxListeners;\n      }\n\n      if (m && m > 0 && this._events[type].length > m) {\n        this._events[type].warned = true;\n        console.error('(node) warning: possible EventEmitter memory ' +\n                      'leak detected. %d listeners added. ' +\n                      'Use emitter.setMaxListeners() to increase limit.',\n                      this._events[type].length);\n        console.trace();\n      }\n    }\n\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  } else {\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  var self = this;\n  self.on(type, function g() {\n    self.removeListener(type, g);\n    listener.apply(this, arguments);\n  });\n\n  return this;\n};\n\nEventEmitter.prototype.removeListener = function(type, listener) {\n  if ('function' !== typeof listener) {\n    throw new Error('removeListener only takes instances of Function');\n  }\n\n  // does not use listeners(), so no side effect of creating _events[type]\n  if (!this._events || !this._events[type]) return this;\n\n  var list = this._events[type];\n\n  if (isArray(list)) {\n    var i = list.indexOf(listener);\n    if (i < 0) return this;\n    list.splice(i, 1);\n    if (list.length == 0)\n      delete this._events[type];\n  } else if (this._events[type] === listener) {\n    delete this._events[type];\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  // does not use listeners(), so no side effect of creating _events[type]\n  if (type && this._events && this._events[type]) this._events[type] = null;\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  if (!this._events) this._events = {};\n  if (!this._events[type]) this._events[type] = [];\n  if (!isArray(this._events[type])) {\n    this._events[type] = [this._events[type]];\n  }\n  return this._events[type];\n};\n"]}